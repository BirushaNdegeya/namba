// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @default(uuid())
  username       String         @unique
  email          String?        @unique
  password       String
  name           String?
  phone          String?
  role           Role           @default(USER)
  location       Location?
  Availability   Availability[]
  OrderClient    Order[]        @relation("ClientOrders")
  OrderCollector Order[]        @relation("CollectorOrders")
}

model Location {
  id        String  @id @default(cuid())
  latitude  Float
  longitude Float
  userId    String? @unique
  user      User?   @relation(fields: [userId], references: [id])
}

model Order {
  id          String      @id @default(cuid())
  clientId    String
  client      User        @relation("ClientOrders", fields: [clientId], references: [id])
  status      OrderStatus @default(PENDING)
  collectorId String?
  collector   User?       @relation("CollectorOrders", fields: [collectorId], references: [id])
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Availability {
  id        String  @id @default(cuid())
  userId    String
  available Boolean @default(false)
  latitude  Float
  longitude Float
  User      User    @relation(fields: [userId], references: [id])
}

enum Role {
  USER
  COLLECTOR
  ADMIN
}

enum OrderStatus {
  PENDING
  ASSIGNED
  RECEIVED
  COMPLETED
  CANCELED
  DONE
}
